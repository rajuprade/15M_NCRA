/* calepoch_ routine */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

/*
#include "source.h" 
#include "constant.h" 

 
 double fangle_(char * , int *);
 
 SOURCE sss;
 final  val;
 union udcoord ud ;
*/
void getString2(char** data){
   printf("bi %s\n", data[0]);
   data[0] = "Bye";
   printf("b %s\n", data[0]);
  return;
}

void calclst(char** argv, char** srcline, char** resultInfo)
{
  // char *argv[ ]= {"11","03","21","10","56","30"};
  // char *srcline[ ] = {  "3C286","13h28m49.65s", "+30d45'58.6", "1950.0" };
/*
   char lststring[80]; unsigned char lsti[8];
   char *format_str = "\0";
   int *d1, *d2, *d31, *stat, i;
   double *mytime;
   int *it[3];
   float *d32;
   double *d3, *epoch, *djm, ti, *lst, *t0az;
   double tz1 = -5.5 ;
   double long1 = (double)atof(argv[6]);// -74.05; 
   double ra_Rad, dec_Rad;
   int mode; 

   epoch =(double *) malloc(sizeof(double));
   d32 =(float *) malloc(sizeof(float));
   for(i=0;i<3;i++){ 
	it[i] =(int *) malloc(sizeof(int));
   }
   i=0;
   mytime= (double *)malloc(sizeof(double));

   d1 =(int *) malloc(sizeof(int));
   d2 =(int *) malloc(sizeof(int));
   d31 =(int *) malloc(sizeof(int));
   stat =(int *) malloc(sizeof(int));
   d3   =(double *) malloc(sizeof(double));
   djm  =(double *) malloc(sizeof(double));
   t0az =(double *) malloc(sizeof(double));
   lst  =(double *) malloc(sizeof(double));

   *d1 = (int) atoi(argv[0]);
   *d2 = (int) atoi(argv[1]);
   *d3 = (double ) atof(argv[2]);
   *it[0] = (int ) atoi(argv[3]);
   *it[1] = (int ) atoi(argv[4]);
   *it[2] = (int ) atof(argv[5]); 
   fprintf(stderr,  "  date %d %d %lf Time %d:%d:%d \n", (int) *d1, (int) *d2, (double) *d3, *it[0],*it[1],*it[2]); 

   *mytime =    (double) ( (double) (*it[0] + ( *it[1]/60.0) + (*it[2]/3600.0) ))/r2h;

   (void) fryej_(d1,d2,d3,epoch);   
   fprintf(stderr, " fryej_ epoch %lf ", (double) *epoch);   

     ra_Rad = fangle_(srcline[1],&i);
     dec_Rad = fangle_(srcline[2],&i);

     ud.dcoord[0]=sss.ra0= ra_Rad;    
     ud.dcoord[1]=sss.dec0= dec_Rad; 
     ud.dcoord[2]= sss.ep0 = atof(srcline[3]);
     ud.dcoord[7] = sss.epd =  *epoch ;
     
     sss.time = (float) *mytime ;    
     sss.te0 = (float ) *mytime ; 
     sss.raoff = sss.dra=sss.decoff=sss.ddec=sss.azoff=sss.daz=sss.del=0;    

   (void) ep2daj_((float *)&sss.ep0,d1,d2,d31,d32);   

#ifdef DEBUGJ
   fprintf(stderr, " ep2daj_  %d %d %d %f   ", (int) *d1, (int) *d2, (int) *d31, (float) *d32); 
#endif
   (void) slacaldj_(d1,d2,d31,&sss.ep0,stat);          
   fprintf(stderr, " mjd_ref %lf %d \n", (double ) sss.ep0, (int) *stat);

   (void) ep2daj_((float *)&sss.epd,d1,d2,d31,d32);   
#ifdef DEBUGJ
   fprintf(stderr, " ep2daj_  %d %d %d %f   ", (int) *d1, (int) *d2, (int) *d31, (float) *d32); 
#endif
   (void) slacaldj_(d1,d2,d31,&sss.epd,stat);          
   fprintf(stderr, " mjd_target %lf %d \n", (double ) sss.epd, (int) *stat);
    *djm = sss.epd ;

    ti= *mytime+(tz1/r2h);
   *t0az = (double)*djm +(ti * r2h/24);

    (void) slagmst_(t0az,lst);  

     *lst = *lst - long1/r2d;
     if(*lst > twopi)*lst=*lst - twopi;
    
	i=stime_(lst,format_str,lststring);     
        printf(" LST %lf lststing %s \n", *lst, lststring); 
*/
	printf("Original data %s \n", resultInfo[0]);
	resultInfo[0] = "Trying";
        printf("printing modified data %s \n ", resultInfo[0]); 
/*	
	free(d1);
	free(d2);
	free(d31);
	free(stat);
	free(d3);
	free(t0az);
	free(lst);
	free(epoch);
	free(d32);
	free(mytime);
        free(djm);	
	for(i=0;i<3;i++)
	{	
		free(it[i]);
	}
*/	
	printf("B4 RT ");
//	return;

}
